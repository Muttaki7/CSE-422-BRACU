# -*- coding: utf-8 -*-
"""Md.Tasnim_Muttaki_21101216_sec-10_lab-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1abh-1j9o2Iytq43jiTDf-Ir3W6Cgucrv
"""

with open("Converted_Text_File.txt", "r") as file:
    content = file.read()
h={}
graph={}
for i in input_file:
    temp= i.split(" ")
    h[temp[0]]= int(temp[1])
    graph[temp[0]]=[]
    for j in range(2,len(temp)-1,2):
        city=temp[j]
        d=temp[j+1]
        graph[temp[0]].append((city,int(d)))
st= input("st: ")
end= input("end: ")

import heapq
def printpath(parent,st,end,d):
    pathh=[]
    pathh.append(end)
    temp=end
    while temp != None:
        pathh.append(parent[temp])
        temp=parent[temp]
    pathh.reverse()
    if pathh == None:
        with open( "C:Users\Muttaki\Downloads\output.txt", 'w') as f:
            f.write("NO PATH FOUND\n")
    else:

        with open("C:Users\Muttaki\Downloads\output.txt", 'w') as f:
            f.write(f"Path: {' -> '.join(pathh[1:])}\n")
            f.write(f"Total d: {d[end]} km\n")

def ASterSearch(st,end):

    parent={st:None}
    d={st: 0}
   q= []
    heapq.heappush(queue,(h[st],st))
    whileq:
        temp=heapq.heappop(queue)
        for i in graph[temp[1]]:
            tempd=d[temp[1]]+ i[1]
            if i[0] not in d or tempd<d[i[0]]:
                d[i[0]]=tempd
                astarcost=d[i[0]]+ h[i[0]]
                heapq.heappush(queue,(astarcost,i[0]))
                parent[i[0]]=temp[1]
    printpath(parent,st,end,d)
ASterSearch(st,end)